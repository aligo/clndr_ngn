// Generated by CoffeeScript 1.6.3
(function() {
  var ClndrNgn;

  ClndrNgn = (function() {
    function ClndrNgn(year, month) {
      this.year = year;
      this.month = month;
    }

    ClndrNgn.prototype.setPrevMonth = function() {
      if (this.month > 1) {
        return this.month -= 1;
      } else {
        this.month = 12;
        return this.year -= 1;
      }
    };

    ClndrNgn.prototype.setNextMonth = function() {
      if (this.month < 11) {
        return this.month += 1;
      } else {
        this.month = 1;
        return this.year += 1;
      }
    };

    ClndrNgn.prototype.getDaysInMonth = function() {
      return new Date(this.year, this.month, 0).getDate();
    };

    ClndrNgn.prototype.getCalendar = function() {
      var date, first_clndr_date, first_day, i, prev_clndr, prev_last_date, result, rows, _i, _ref;
      result = [];
      for (date = _i = 1, _ref = this.getDaysInMonth(); 1 <= _ref ? _i <= _ref : _i >= _ref; date = 1 <= _ref ? ++_i : --_i) {
        result.push({
          date: date,
          "in": true
        });
      }
      first_day = new Date(this.year, this.month - 1, 1).getDay();
      if (first_day > 0) {
        prev_clndr = new ClndrNgn(this.year, this.month);
        prev_clndr.setPrevMonth();
        prev_last_date = prev_clndr.getDaysInMonth();
        first_clndr_date = prev_last_date - first_day;
        while (first_clndr_date < prev_last_date) {
          result.unshift({
            date: prev_last_date,
            "in": false
          });
          prev_last_date -= 1;
        }
      }
      rows = Math.ceil(result.length / 7);
      i = 0;
      while (result.length < rows * 7) {
        result.push({
          date: i += 1,
          "in": false
        });
      }
      return result;
    };

    return ClndrNgn;

  })();

}).call(this);
